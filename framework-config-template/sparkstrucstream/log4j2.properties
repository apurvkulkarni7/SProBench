#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Set everything to be logged to the console
rootLogger.level = info
# rootLogger.appenderRef.stdout.ref = console
rootLogger.appenderRef.file.ref = file

# In the pattern layout configuration below, we specify an explicit `%ex` conversion
# pattern for logging Throwables. If this was omitted, then (by default) Log4J would
# implicitly add an `%xEx` conversion pattern which logs stacktraces with additional
# class packaging information. That extra information can sometimes add a substantial
# performance overhead, so we disable it in our default logging config.
# For more information, see SPARK-39361.
# appender.console.type = Console
# appender.console.name = console
# appender.console.target = SYSTEM_ERR
# appender.console.layout.type = PatternLayout
# appender.console.layout.pattern = %d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n%ex

# File appender configuration
appender.file.type = File
appender.file.name = file
appender.file.fileName = FRAMEWORK_LOG_DIR/app.log
appender.file.layout.type = PatternLayout
appender.file.layout.pattern = %d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n%ex
appender.file.createOnDemand = true

# Set the default spark-shell/spark-sql log level to WARN. When running the
# spark-shell/spark-sql, the log level for these classes is used to overwrite
# the root logger's log level, so that the user can have different defaults
# for the shell and regular Spark apps.
logger.repl.name = org.apache.spark.repl.Main
logger.repl.level = warn

logger.thriftserver.name = org.apache.spark.sql.hive.thriftserver.SparkSQLCLIDriver
logger.thriftserver.level = warn

# Settings to quiet third party logs that are too verbose
logger.jetty1.name = org.sparkproject.jetty
logger.jetty1.level = warn
logger.jetty2.name = org.sparkproject.jetty.util.component.AbstractLifeCycle
logger.jetty2.level = error
logger.replexprTyper.name = org.apache.spark.repl.SparkIMain$exprTyper
logger.replexprTyper.level = info
logger.replSparkILoopInterpreter.name = org.apache.spark.repl.SparkILoop$SparkILoopInterpreter
logger.replSparkILoopInterpreter.level = info
logger.parquet1.name = org.apache.parquet
logger.parquet1.level = error
logger.parquet2.name = parquet
logger.parquet2.level = error

# SPARK-9183: Settings to avoid annoying messages when looking up nonexistent UDFs in SparkSQL with Hive support
logger.RetryingHMSHandler.name = org.apache.hadoop.hive.metastore.RetryingHMSHandler
logger.RetryingHMSHandler.level = fatal
logger.FunctionRegistry.name = org.apache.hadoop.hive.ql.exec.FunctionRegistry
logger.FunctionRegistry.level = error

# For deploying Spark ThriftServer
# SPARK-34128: Suppress undesirable TTransportException warnings involved in THRIFT-4805
# appender.console.filter.1.type = RegexFilter
# appender.console.filter.1.regex = .*Thrift error occurred during processing of message.*
# appender.console.filter.1.onMatch = deny
# appender.console.filter.1.onMismatch = neutral


# Apply the same filter to the file appender
appender.file.filter.1.type = RegexFilter
appender.file.filter.1.regex = .*Thrift error occurred during processing of message.*
appender.file.filter.1.onMatch = deny
appender.file.filter.1.onMismatch = neutral

# Prevent logging from CheckpointFileManager at INFO level or lower
logger.spark.name = org.apache.spark.sql
logger.spark.level = warn

logger.spark_scheduler.name = org.apache.spark.scheduler
logger.spark_scheduler.level = warn


logger.kafka_consumer.name = org.apache.kafka.clients.consumer
logger.kafka_consumer.level = warn

ogger.spark_scheduler.name = org.apache.spark.scheduler
logger.spark_scheduler.level = WARN

# Suppress INFO logs from Spark Storage
logger.spark_storage.name = org.apache.spark.storage
logger.spark_storage.level = WARN

# Optionally, suppress INFO logs from SparkContext lifecycle (use with caution)
logger.spark_context.name = org.apache.spark.SparkContext
logger.spark_context.level = WARN

logger.spark_executor.name = org.apache.spark.executor.Executor
logger.spark_executor.level = warn

# # Prevent logging from MicroBatchExecution at INFO level or lower
# logger.microbatch.name = org.apache.spark.sql.execution.streaming.MicroBatchExecution
# logger.microbatch.level = WARN

# # Prevent logging from IncrementalExecution at INFO level or lower
# logger.incremental.name = org.apache.spark.sql.execution.streaming.IncrementalExecution
# logger.incremental.level = WARN

# # Prevent logging from KafkaOffsetReaderAdmin at INFO level or lower
# logger.kafkaoffset.name = org.apache.spark.spark-submit
# logger.kafkaoffset.level = WARN